"use strict";(self.webpackChunkannict_developers=self.webpackChunkannict_developers||[]).push([[8353],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>u});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},p=Object.keys(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),i=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,p=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=i(a),u=n,k=m["".concat(l,".").concat(u)]||m[u]||d[u]||p;return a?r.createElement(k,c(c({ref:t},s),{},{components:a})):r.createElement(k,c({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=a.length,c=new Array(p);c[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,c[1]=o;for(var i=2;i<p;i++)c[i]=a[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6533:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>u,Bullet:()=>d,SpecifiedBy:()=>m,assets:()=>i,contentTitle:()=>o,default:()=>f,frontMatter:()=>c,metadata:()=>l,toc:()=>s});var r=a(7462),n=a(7294),p=a(3905);const c={id:"id",title:"ID",hide_table_of_contents:!1},o=void 0,l={unversionedId:"graphql-api/beta/reference/scalars/id",id:"graphql-api/beta/reference/scalars/id",title:"ID",description:'The ID scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as "4") or integer (such as 4) input value will be accepted as an ID.',source:"@site/docs/graphql-api/beta/reference/scalars/id.mdx",sourceDirName:"graphql-api/beta/reference/scalars",slug:"/graphql-api/beta/reference/scalars/id",permalink:"/docs/graphql-api/beta/reference/scalars/id",draft:!1,editUrl:"https://github.com/kiraka/annict-developers/edit/main/docs/graphql-api/beta/reference/scalars/id.mdx",tags:[],version:"current",frontMatter:{id:"id",title:"ID",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"Float",permalink:"/docs/graphql-api/beta/reference/scalars/float"},next:{title:"Int",permalink:"/docs/graphql-api/beta/reference/scalars/int"}},i={},s=[{value:"Member of",id:"member-of",level:3}],d=()=>(0,p.kt)(n.Fragment,null,(0,p.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),m=e=>(0,p.kt)(n.Fragment,null,"Specification",(0,p.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),u=e=>(0,p.kt)(n.Fragment,null,(0,p.kt)("span",{class:"badge badge--"+e.class},e.text)),k={toc:s,Bullet:d,SpecifiedBy:m,Badge:u};function f(e){let{components:t,...a}=e;return(0,p.kt)("wrapper",(0,r.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"ID")," scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as ",(0,p.kt)("inlineCode",{parentName:"p"},'"4"'),") or integer (such as ",(0,p.kt)("inlineCode",{parentName:"p"},"4"),") input value will be accepted as an ID."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-graphql"},"scalar ID\n")),(0,p.kt)("h3",{id:"member-of"},"Member of"),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/activity"},(0,p.kt)("inlineCode",{parentName:"a"},"Activity")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/cast"},(0,p.kt)("inlineCode",{parentName:"a"},"Cast")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/channel"},(0,p.kt)("inlineCode",{parentName:"a"},"Channel")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/channel-group"},(0,p.kt)("inlineCode",{parentName:"a"},"ChannelGroup")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/character"},(0,p.kt)("inlineCode",{parentName:"a"},"Character")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/inputs/create-record-input"},(0,p.kt)("inlineCode",{parentName:"a"},"CreateRecordInput")),"  ",(0,p.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/inputs/create-review-input"},(0,p.kt)("inlineCode",{parentName:"a"},"CreateReviewInput")),"  ",(0,p.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/inputs/delete-record-input"},(0,p.kt)("inlineCode",{parentName:"a"},"DeleteRecordInput")),"  ",(0,p.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/inputs/delete-review-input"},(0,p.kt)("inlineCode",{parentName:"a"},"DeleteReviewInput")),"  ",(0,p.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/episode"},(0,p.kt)("inlineCode",{parentName:"a"},"Episode")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/library-entry"},(0,p.kt)("inlineCode",{parentName:"a"},"LibraryEntry")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/multiple-record"},(0,p.kt)("inlineCode",{parentName:"a"},"MultipleRecord")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/interfaces/node"},(0,p.kt)("inlineCode",{parentName:"a"},"Node")),"  ",(0,p.kt)(u,{class:"secondary",text:"interface",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/queries/node"},(0,p.kt)("inlineCode",{parentName:"a"},"node")),"  ",(0,p.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/queries/nodes"},(0,p.kt)("inlineCode",{parentName:"a"},"nodes")),"  ",(0,p.kt)(u,{class:"secondary",text:"query",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/organization"},(0,p.kt)("inlineCode",{parentName:"a"},"Organization")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/person"},(0,p.kt)("inlineCode",{parentName:"a"},"Person")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/prefecture"},(0,p.kt)("inlineCode",{parentName:"a"},"Prefecture")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/program"},(0,p.kt)("inlineCode",{parentName:"a"},"Program")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/record"},(0,p.kt)("inlineCode",{parentName:"a"},"Record")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/review"},(0,p.kt)("inlineCode",{parentName:"a"},"Review")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/series"},(0,p.kt)("inlineCode",{parentName:"a"},"Series")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/staff"},(0,p.kt)("inlineCode",{parentName:"a"},"Staff")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/status"},(0,p.kt)("inlineCode",{parentName:"a"},"Status")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/inputs/update-record-input"},(0,p.kt)("inlineCode",{parentName:"a"},"UpdateRecordInput")),"  ",(0,p.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/inputs/update-review-input"},(0,p.kt)("inlineCode",{parentName:"a"},"UpdateReviewInput")),"  ",(0,p.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/inputs/update-status-input"},(0,p.kt)("inlineCode",{parentName:"a"},"UpdateStatusInput")),"  ",(0,p.kt)(u,{class:"secondary",text:"input",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/user"},(0,p.kt)("inlineCode",{parentName:"a"},"User")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/work"},(0,p.kt)("inlineCode",{parentName:"a"},"Work")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"}),(0,p.kt)(d,{mdxType:"Bullet"}),(0,p.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/objects/work-image"},(0,p.kt)("inlineCode",{parentName:"a"},"WorkImage")),"  ",(0,p.kt)(u,{class:"secondary",text:"object",mdxType:"Badge"})))}f.isMDXComponent=!0}}]);