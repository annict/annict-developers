"use strict";(self.webpackChunkannict_developers=self.webpackChunkannict_developers||[]).push([[5705],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),d=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),h=d(n),f=a,g=h["".concat(i,".").concat(f)]||h[f]||p[f]||c;return n?r.createElement(g,o(o({ref:t},s),{},{components:n})):r.createElement(g,o({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=h;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<c;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},9478:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>f,Bullet:()=>p,SpecifiedBy:()=>h,assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(7462),a=n(7294),c=n(3905);const o={id:"character-connection",title:"CharacterConnection",hide_table_of_contents:!1},l=void 0,i={unversionedId:"graphql-api/beta/reference/objects/character-connection",id:"graphql-api/beta/reference/objects/character-connection",title:"CharacterConnection",description:"The connection type for Character.",source:"@site/docs/graphql-api/beta/reference/objects/character-connection.mdx",sourceDirName:"graphql-api/beta/reference/objects",slug:"/graphql-api/beta/reference/objects/character-connection",permalink:"/docs/graphql-api/beta/reference/objects/character-connection",draft:!1,editUrl:"https://github.com/kiraka/annict-developers/edit/main/docs/graphql-api/beta/reference/objects/character-connection.mdx",tags:[],version:"current",frontMatter:{id:"character-connection",title:"CharacterConnection",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"Channel",permalink:"/docs/graphql-api/beta/reference/objects/channel"},next:{title:"CharacterEdge",permalink:"/docs/graphql-api/beta/reference/objects/character-edge"}},d={},s=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>CharacterConnection.<b>edges</b></code><Bullet /><code>[CharacterEdge]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-characterconnectionbedgesbcodecharacteredge--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CharacterConnection.<b>nodes</b></code><Bullet /><code>[Character]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-characterconnectionbnodesbcodecharacter--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CharacterConnection.<b>pageInfo</b></code><Bullet /><code>PageInfo!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-characterconnectionbpageinfobcodepageinfo--",level:4},{value:"Returned by",id:"returned-by",level:3}],p=()=>(0,c.kt)(a.Fragment,null,(0,c.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),h=e=>(0,c.kt)(a.Fragment,null,"Specification",(0,c.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),f=e=>(0,c.kt)(a.Fragment,null,(0,c.kt)("span",{class:"badge badge--"+e.class},e.text)),g={toc:s,Bullet:p,SpecifiedBy:h,Badge:f};function u(e){let{components:t,...n}=e;return(0,c.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"The connection type for Character."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-graphql"},"type CharacterConnection {\n  edges: [CharacterEdge]\n  nodes: [Character]\n  pageInfo: PageInfo!\n}\n")),(0,c.kt)("h3",{id:"fields"},"Fields"),(0,c.kt)("h4",{id:"code-style-fontweight-normal-characterconnectionbedgesbcodecharacteredge--"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"CharacterConnection.",(0,c.kt)("b",null,"edges"))),(0,c.kt)(p,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-api/beta/reference/objects/character-edge"},(0,c.kt)("inlineCode",{parentName:"a"},"[CharacterEdge]"))," ",(0,c.kt)(f,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,c.kt)(f,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"A list of edges.")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-characterconnectionbnodesbcodecharacter--"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"CharacterConnection.",(0,c.kt)("b",null,"nodes"))),(0,c.kt)(p,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-api/beta/reference/objects/character"},(0,c.kt)("inlineCode",{parentName:"a"},"[Character]"))," ",(0,c.kt)(f,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,c.kt)(f,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"A list of nodes.")),(0,c.kt)("h4",{id:"code-style-fontweight-normal-characterconnectionbpageinfobcodepageinfo--"},(0,c.kt)("a",{parentName:"h4",href:"#"},(0,c.kt)("code",{style:{fontWeight:"normal"}},"CharacterConnection.",(0,c.kt)("b",null,"pageInfo"))),(0,c.kt)(p,{mdxType:"Bullet"}),(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql-api/beta/reference/objects/page-info"},(0,c.kt)("inlineCode",{parentName:"a"},"PageInfo!"))," ",(0,c.kt)(f,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,c.kt)(f,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Information to aid in pagination.")),(0,c.kt)("h3",{id:"returned-by"},"Returned by"),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/queries/search-characters"},(0,c.kt)("inlineCode",{parentName:"a"},"searchCharacters")),"  ",(0,c.kt)(f,{class:"secondary",text:"query",mdxType:"Badge"})))}u.isMDXComponent=!0}}]);