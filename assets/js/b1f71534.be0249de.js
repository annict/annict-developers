"use strict";(self.webpackChunkannict_developers=self.webpackChunkannict_developers||[]).push([[1868],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),i=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=i(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=i(n),g=r,u=f["".concat(s,".").concat(g)]||f[g]||d[g]||a;return n?o.createElement(u,c(c({ref:t},p),{},{components:n})):o.createElement(u,c({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var i=2;i<a;i++)c[i]=n[i];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3992:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>g,Bullet:()=>d,SpecifiedBy:()=>f,assets:()=>i,contentTitle:()=>l,default:()=>b,frontMatter:()=>c,metadata:()=>s,toc:()=>p});var o=n(7462),r=n(7294),a=n(3905);const c={id:"person-connection",title:"PersonConnection",hide_table_of_contents:!1},l=void 0,s={unversionedId:"graphql-api/beta/reference/objects/person-connection",id:"graphql-api/beta/reference/objects/person-connection",title:"PersonConnection",description:"The connection type for Person.",source:"@site/docs/graphql-api/beta/reference/objects/person-connection.mdx",sourceDirName:"graphql-api/beta/reference/objects",slug:"/graphql-api/beta/reference/objects/person-connection",permalink:"/docs/graphql-api/beta/reference/objects/person-connection",draft:!1,editUrl:"https://github.com/kiraka/annict-developers/edit/main/docs/graphql-api/beta/reference/objects/person-connection.mdx",tags:[],version:"current",frontMatter:{id:"person-connection",title:"PersonConnection",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"PageInfo",permalink:"/docs/graphql-api/beta/reference/objects/page-info"},next:{title:"PersonEdge",permalink:"/docs/graphql-api/beta/reference/objects/person-edge"}},i={},p=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>PersonConnection.<b>edges</b></code><Bullet /><code>[PersonEdge]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-personconnectionbedgesbcodepersonedge--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>PersonConnection.<b>nodes</b></code><Bullet /><code>[Person]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-personconnectionbnodesbcodeperson--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>PersonConnection.<b>pageInfo</b></code><Bullet /><code>PageInfo!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-personconnectionbpageinfobcodepageinfo--",level:4},{value:"Returned by",id:"returned-by",level:3}],d=()=>(0,a.kt)(r.Fragment,null,(0,a.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),f=e=>(0,a.kt)(r.Fragment,null,"Specification",(0,a.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),g=e=>(0,a.kt)(r.Fragment,null,(0,a.kt)("span",{class:"badge badge--"+e.class},e.text)),u={toc:p,Bullet:d,SpecifiedBy:f,Badge:g};function b(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The connection type for Person."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"type PersonConnection {\n  edges: [PersonEdge]\n  nodes: [Person]\n  pageInfo: PageInfo!\n}\n")),(0,a.kt)("h3",{id:"fields"},"Fields"),(0,a.kt)("h4",{id:"code-style-fontweight-normal-personconnectionbedgesbcodepersonedge--"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"PersonConnection.",(0,a.kt)("b",null,"edges"))),(0,a.kt)(d,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/docs/graphql-api/beta/reference/objects/person-edge"},(0,a.kt)("inlineCode",{parentName:"a"},"[PersonEdge]"))," ",(0,a.kt)(g,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,a.kt)(g,{class:"secondary",text:"object",mdxType:"Badge"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"A list of edges.")),(0,a.kt)("h4",{id:"code-style-fontweight-normal-personconnectionbnodesbcodeperson--"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"PersonConnection.",(0,a.kt)("b",null,"nodes"))),(0,a.kt)(d,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/docs/graphql-api/beta/reference/objects/person"},(0,a.kt)("inlineCode",{parentName:"a"},"[Person]"))," ",(0,a.kt)(g,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,a.kt)(g,{class:"secondary",text:"object",mdxType:"Badge"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"A list of nodes.")),(0,a.kt)("h4",{id:"code-style-fontweight-normal-personconnectionbpageinfobcodepageinfo--"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"PersonConnection.",(0,a.kt)("b",null,"pageInfo"))),(0,a.kt)(d,{mdxType:"Bullet"}),(0,a.kt)("a",{parentName:"h4",href:"/docs/graphql-api/beta/reference/objects/page-info"},(0,a.kt)("inlineCode",{parentName:"a"},"PageInfo!"))," ",(0,a.kt)(g,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,a.kt)(g,{class:"secondary",text:"object",mdxType:"Badge"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Information to aid in pagination.")),(0,a.kt)("h3",{id:"returned-by"},"Returned by"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/graphql-api/beta/reference/queries/search-people"},(0,a.kt)("inlineCode",{parentName:"a"},"searchPeople")),"  ",(0,a.kt)(g,{class:"secondary",text:"query",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);